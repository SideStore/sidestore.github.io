---
import VioletPhrase from '../preact/VioletPhrase';
---

<div id="open-source" class="my-32 flex w-full flex-col items-center justify-center lg:max-w-[90rem] lg:px-12 section-fade snap-center">
  <div class="flex flex-col items-center justify-center max-w-xl px-4 pb-4 text-center lg:mr-4">
    <span
      class="px-3 py-1 border rounded-full shadow-[inset_0_-7px_11px_#a48fff1f] text-[0.92rem] border-side-purple-400/60 flex text-white bg-material/50 backdrop-blur-md w-max"
      >Open Source</span
    >
    <h1
      class="text-3xl xs:text-4xl sm:leading-none sm:text-[3rem] font-medium text-white font-title shadow-title-b block bg-clip-text !text-transparent mt-6"
    >
      Free, forever
    </h1>
    <p class="mt-2 sm:mt-3 text-zinc-300/70">
      SideStore is <VioletPhrase>fully open-source</VioletPhrase> and <VioletPhrase>run by contributors</VioletPhrase>, supported by our <VioletPhrase
      >
        community
      </VioletPhrase>
      and our
      <VioletPhrase>patrons</VioletPhrase>. You can find the source code for all our projects on
      <a href="https://github.com/SideStore" target="_blank" class="font-medium underline transition-colors text-violet-300/70 hover:text-violet-300"
        >GitHub</a
      >, and you can freely contribute to the project.
    </p>
  </div>
  <div class="grid justify-center w-full h-full px-4 mt-4 gridok:justify-evenly">
    <div
      class="flex flex-col items-center w-full max-w-lg grid-cols-8 space-y-4 h-max gridok:space-y-0 gridok:max-w-none gridok:space-x-4 grid12ok:grid-cols-12 gridok:grid"
    >
      <div
        class="flex flex-col items-center w-full h-full col-span-4 p-4 text-sm text-left border sm:p-8 grid35ok:col-span-3 grid12ok:col-span-4 lg:mt-0 bg-material/30 border-zinc-800 rounded-3xl sm:text-base"
      >
        <div id="event-log" class="flex flex-col justify-center w-full h-full space-y-4 section-fade-items"></div>
      </div>

      <div
        class="flex flex-col items-center justify-center w-auto h-full col-span-4 p-4 text-sm text-left border sm:p-8 grid35ok:col-span-5 grid12ok:col-span-8 lg:mt-0 bg-material/30 border-zinc-800 rounded-3xl sm:text-base"
      >
        <div class="grid w-full h-full">
          <div
            class="flex flex-col items-center w-full h-full gap-3 grid35ok:grid grid35ok:grid-cols-2 grid12ok:grid-cols-3 section-fade-items grid-fix group"
            id="repos-grid"
          >
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script type="module">
  const repoItem = `<a style="--custom-index:{{index}}" href="{{url}}" target="_blank" class="flex flex-col w-full gridok:h-full max-w-md p-4 border rounded-2xl border-zinc-800 text-zinc-200 bg-material/50 hover:bg-material hover:border-zinc-700 hover:shadow-xl"> <span class="text-[1.075rem] text-semibold font-title">{{name}}</span> <p class="text-zinc-300/70 overflow-x-ellipsis whitespace-pre-wrap text-[0.9rem]">{{description}}</p><div class="gridok:flex-grow" ></div><div class="flex space-x-3 mt-1 text-[0.9rem]"> <div class="flex items-center"> <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 mr-1.5" fill="currentColor" viewBox="0 0 256 256"><path d="M234.5,114.38l-45.1,39.36,13.51,58.6a16,16,0,0,1-23.84,17.34l-51.11-31-51,31a16,16,0,0,1-23.84-17.34L66.61,153.8,21.5,114.38a16,16,0,0,1,9.11-28.06l59.46-5.15,23.21-55.36a15.95,15.95,0,0,1,29.44,0h0L166,81.17l59.44,5.15a16,16,0,0,1,9.11,28.06Z"></path></svg>{{stars}}</div><div class="flex items-center"> <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 mr-1.5" fill="currentColor" viewBox="0 0 256 256"><path d="M216,48H40A16,16,0,0,0,24,64V224a15.84,15.84,0,0,0,9.25,14.5A16.05,16.05,0,0,0,40,240a15.89,15.89,0,0,0,10.25-3.78.69.69,0,0,0,.13-.11L82.5,208H216a16,16,0,0,0,16-16V64A16,16,0,0,0,216,48ZM84,140a12,12,0,1,1,12-12A12,12,0,0,1,84,140Zm44,0a12,12,0,1,1,12-12A12,12,0,0,1,128,140Zm44,0a12,12,0,1,1,12-12A12,12,0,0,1,172,140Z"></path></svg>{{issues}}</div><div class="flex items-center"> <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 mr-1.5" fill="currentColor" viewBox="0 0 256 256"><path d="M104,64A32,32,0,1,0,64,95v66a32,32,0,1,0,16,0V95A32.06,32.06,0,0,0,104,64ZM88,192a16,16,0,1,1-16-16A16,16,0,0,1,88,192Zm144,0a32,32,0,1,1-40-31V123.88A39.71,39.71,0,0,0,180.28,95.6L152,67.31V96a8,8,0,0,1-16,0V48a8,8,0,0,1,8-8h48a8,8,0,0,1,0,16H163.31L191.6,84.28a55.67,55.67,0,0,1,16.4,39.6V161A32.06,32.06,0,0,1,232,192Z"></path></svg>{{forks}}</div></div></a>`;
  let eventItem = `<div class="flex items-center w-full" style="--custom-index:{{index}}"> <img class="mr-4 h-8 w-8 rounded-lg" loading="lazy" src="{{avatar}}" alt="{{actor_name}}"/> <div class="flex flex-col justify-center"> <p class="text-sm sm:text-base font-medium text-gray-300">{{message}}</p><p class="text-xs sm:text-sm text-gray-300 text-zinc-300/70">{{sub}}</p></div></div>`;
  let template = (html, obj, urlkeys) => {
    Object.keys(obj).forEach(
      (key) => (html = html.replace(new RegExp(`{{${key}}}`, 'g'), urlkeys.indexOf(key) > -1 ? new URL(obj[key], import.meta.url) : obj[key])),
    );
    return html;
  };
  (async () => {
    let cache_log = JSON.parse(localStorage.getItem('eventLogCache')) || [];
    let eventLog = [];
    //less than 5 minutes old
    if (cache_log.length && localStorage.getItem('eventLogCacheDate') < Date.now() - 1000 * 60 * 5) eventLog = cache_log;
    if (!eventLog.length) {
      eventLog = await (await fetch('https://api.github.com/orgs/sidestore/events?per_page=100')).json();
      localStorage.setItem('eventLogCache', JSON.stringify(eventLog));
    }

    const cache_repos = JSON.parse(localStorage.getItem('reposCache')) || [];
    let repos = [];
    if (cache_repos.length && localStorage.getItem('reposCacheDate') < Date.now() - 1000 * 60 * 60 * 4) repos = cache_repos;
    if (!repos.length) {
      repos = await (await fetch('https://api.github.com/users/sidestore/repos?per_page=50')).json();
      localStorage.setItem('reposCache', JSON.stringify(repos));
    }

    const builtRepos = repos
      .sort((a, b) => b.stargazers_count - a.stargazers_count)
      .filter((i) => i.id != 563241929) // sidestore_downloader
      .slice(0, 9)
      .map((i, index) => {
        let descP = (i.description.length > 85 ? i.description.split('.')[0].split('and')[0] : i.description).trim();
        descP.endsWith('.') || descP.endsWith(',') ? (descP = descP.slice(0, -1)) : null;
        return template(
          repoItem,
          {
            name: i.name.replace(/_/g, '-'),
            description: descP,
            stars: i.stargazers_count,
            forks: i.forks_count,
            issues: i.open_issues_count,
            url: i.html_url,
            index,
          },
          [],
        );
      })
      .join('');
    $('#repos-grid').innerHTML = builtRepos;
    observeElements();
    const typeMap = {
      PushEvent: 'commit',
      IssueCommentEvent: 'issue_comment',
      PullRequestReviewCommentEvent: 'pull_comment',
      PullRequestEvent: 'pull_request',
    };
    let log = eventLog
      .filter((i) => Object.keys(typeMap).includes(i.type))
      .filter((i) => !i.actor.login.includes('[bot]'))
      .filter((i) => i.type !== 'PullRequestEvent' || ['opened', 'closed', 'reopened'].includes(i.payload.action))
      .map((i) => ({
        event: typeMap[i.type],
        data: {
          commits: (i.payload.commits && i.payload.commits.length) || null,
          issueID: (i.payload.issue && i.payload.issue.number) || null,
          pullID: (i.payload.pull_request && i.payload.pull_request.number) || null,
          action: i.payload.action || null,
          date: {
            firstDate: i.created_at,
            lastDate: i.created_at,
            dateSpan: null,
          },
          actor: i.actor,
          repo: i.repo,
        },
      }))
      .reduce((acc, i) => {
        if (i.event == 'commit') {
          let last = acc[acc.length - 1];

          if (last && last.event == 'commit' && last.data.actor.login == i.data.actor.login && last.data.repo.name == i.data.repo.name) {
            last.data.commits += i.data.commits;
            last.data.date.lastDate = i.data.date.firstDate;
            return acc;
          }
        }
        acc.push(i);
        return acc;
      }, [])
      .map((i) => {
        const set = (t) => (i.data.date.dateSpan = t);
        let lastDate = new Date(i.data.date.lastDate);
        let dateSpan = Math.round((new Date() - lastDate) / 1000 / 60);

        if (dateSpan == 0) set('just now');
        else if (dateSpan == 1) set('a minute ago');
        else if (dateSpan <= 60) set(`${dateSpan} minutes ago`);
        else if (dateSpan / 60 == 1) set('an hour ago');
        else if (dateSpan / 60 <= 24) set(`${Math.round(dateSpan / 60)} hours ago`);
        else if (dateSpan / 60 <= 48) set('yesterday');
        else if (dateSpan / 60 <= 24 * 365) set(`${Math.round(dateSpan / 60 / 24)} days ago`);
        else set(`a long time ago`);

        return i;
      })
      .map((i, index) => {
        let url = (t) => t.replace(/https:\/\/api\.github\.com\/(users|repos)/i, 'https://github.com');
        let glink = (id, type) => `<a class="glink" target="_blank" href="${`${url(i.data.repo.url)}/${type}/${id}`}">#${id}</a>`;

        let text = `<a class="glink" href="${url(i.data.actor.url)}">${i.data.actor.login}</a> `;
        if (i.event == 'commit') text += `pushed ${i.data.commits} commit${i.data.commits > 1 ? 's' : ''}`;
        if (i.event == 'issue_comment') text += `commented on issue ${glink(i.data.issueID, 'issues')}`;
        if (i.event == 'pull_comment') text += `commented on pull request ${glink(i.data.pullID, 'pull')}`;
        if (i.event == 'pull_request') text += ` ${i.data.action} pull request ${glink(i.data.pullID, 'pull')}`;

        let sub = `in <a class="glink" href="${url(i.data.repo.url)}">${i.data.repo.name.split('/')[1]}</a> â€¢ ${i.data.date.dateSpan}`;
        return template(eventItem, { avatar: i.data.actor.avatar_url + 'v=3&s=32', message: text, sub, actor_name: i.data.actor.login, index }, []);
      })
      .slice(0, 9);

    $$('#event-log').forEach((el) => (el.innerHTML = log.join('')));
    observeElements();
  })();
</script>
